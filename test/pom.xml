<project>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>cybertete.test</artifactId>
    <version>1.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>au.com.cybersearch2</groupId>
        <artifactId>cybertete.root</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>
    <properties>
      <repo.url>file:/${basedir}</repo.url>
      <target.dir>${basedir}/cybertete.unittests.target</target.dir>
      <target.file>cybertete.unittests.target.target</target.file>
      <temp.dir>${project.build.directory}</temp.dir>
      <repo.dir>${basedir}/../releng/cybertete.target</repo.dir>
      <repo.file>cybertete.target.target</repo.file>
      <!-- Default maven command. Refer profiles. -->
      <maven>mvn</maven>
    </properties>

    <modules>
        <module>cybertete.unittests.target</module>
        <module>cybertete.unittests.manifest</module>
    </modules>
    <profiles>
       <profile>
           <!-- Depends on repo install being performed before this install as repo target is merged into test target -->
          <id>install</id>
          <build>
            <plugins>
              <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                  <excludeDefaultDirectories>false</excludeDefaultDirectories>
                  <filesets>
                    <fileset>
                      <directory>${target.dir}</directory>
                      <includes><include>${target.file}</include></includes>
                    </fileset>
                 </filesets>
                </configuration>
               </plugin>
              <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                    <id>copy-resources</id>
                    <phase>validate</phase>
                    <goals>
                        <goal>copy-resources</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>${basedir}/resources</outputDirectory>
                        <resources>
                             <resource>
                                <directory>${repo.dir}</directory>
                                <includes><include>${repo.file}</include></includes>
                             </resource>
                        </resources>
                    </configuration>
                    </execution>
                </executions>
              </plugin>              
             <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                  <execution>
                    <goals>
                      <goal>transform</goal>
                    </goals>
                    <phase>initialize</phase>
                 </execution>
                </executions>
                <configuration>
                  <transformationSets>
                    <!-- Apply fixes specific to unit tests -->
                    <transformationSet>
                      <dir>resources</dir>
                      <includes>
                          <include>${target.file}</include>
                      </includes>              
                      <outputDir>${temp.dir}</outputDir>
                      <stylesheet>resources/repo_loc1.xsl</stylesheet>
                      <parameters>
                        <parameter>
                          <name>repo_loc</name>
                          <value>${repo.url}</value>
                        </parameter>
                        <parameter>
                          <name>swt_os_arch</name>
                          <value>${swt.os.arch}</value>
                        </parameter>
                      </parameters>            
                    </transformationSet>
                    <!-- Even though Tycho allows more than target, merge repo target 
                         because Eclipse allows only one target file. -->
                    <transformationSet>
                      <dir>${temp.dir}</dir>
                      <includes>
                          <include>${target.file}</include>
                      </includes>              
                      <outputDir>${target.dir}</outputDir>
                      <stylesheet>resources/repo_loc2.xsl</stylesheet>
                      <parameters>
                        <parameter>
                          <name>repo_file</name>
                          <value>${repo.file}</value>
                        </parameter>
                      </parameters>            
                    </transformationSet>
                  </transformationSets>
                </configuration>
                <dependencies>
                  <dependency>
                    <groupId>net.sf.saxon</groupId>
                    <artifactId>saxon</artifactId>
                    <version>8.7</version>
                  </dependency>
                </dependencies>
              </plugin>
            </plugins>
          </build>
       </profile>
    </profiles>
</project>